name: jest-and-docker-ci

# sur tout les merge + sur les push vers main
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # les tests du back
  test-back:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      # vérifie si les variables sont définies (dans github ne pas mettre de "" comme dans le .env)
      - name: Debug environment variables
        run: |
          echo "SECRET_KEY is set: ${{ env.SECRET_KEY != '' }}"
          echo "JWT_EXPIRATION_TIME is set: ${{ env.JWT_EXPIRATION_TIME != '' }}"
      - name: Goto backend and run testForCI
        run: cd backend && npm i && npm run testForCI

  # les tests du front
  test-front:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Goto frontend and run testForCI
        run: cd frontend && npm i && npm run testForCI

  # push sur docker si les tests sont ok ET que merge vers main
  docker:
    needs:
      - test-front
      - test-back
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # push vers docker pour le front
      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:frontend"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:latest
      # push vers docker pour le back
      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:backend"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:latest
      # push vers docker pour le service images
      - name: Build and push images
        uses: docker/build-push-action@v4
        with:
          push: true
          context: "{{defaultContext}}:images"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/images:latest
