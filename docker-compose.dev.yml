volumes:
  parkour-database:

services:
  db:
    image: postgres
    restart: always
    env_file:
      - ./.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d parkour -U kevin"]
      interval: 10s
      timeout: 10s
      retries: 5
    volumes:
      - parkour-database:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  backend:
    build: ./backend
    ports:
      - "4000:4000"
    volumes:
      - "./backend/src:/app/src"
    env_file:
      - ./.env
    healthcheck:
      test:
        - CMD-SHELL
        - "curl -f http://backend:4000/graphql?query=%7B__typename%7D -H 'Apollo-Require-Preflight: true' || exit 1"
      interval: 10s
      timeout: 30s
      retries: 5
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    environment:
      - WDS_SOCKET_HOST=127.0.0.1
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "3000:3000"
    volumes:
      - "./frontend/src:/app/src"
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - ./.env

  images:
    build: ./images
    ports:
      - 3002:3002
    env_file:
      - ./images/.env
    volumes:
      - "./images/src:/app/src"
      - "./images/google.cloud-key.json:/app/google.cloud-key.json:ro"
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google.cloud-key.json

  # fixtures:
  #   build: ./backend
  #   command: npm run loadFixtures
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   env_file:
  #     - ./.env
